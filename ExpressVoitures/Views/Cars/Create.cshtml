@using ExpressVoitures.Controllers
@using ExpressVoitures.Models.Entities
@using ExpressVoitures.Data

@model ExpressVoitures.Models.Entities.CarViewModel

@{
    ViewData["Title"] = "Create";
}

<h2>Enregistrement d' une nouvelle voiture</h2>

 <form id="carForm" method="post" enctype="multipart/form-data" asp-controller="Cars" asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="container">

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="CodeVIN" class="control-label"></label>
                        <input asp-for="CodeVIN" class="form-control" />
                        <span asp-validation-for="CodeVIN" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CarBrandId, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CarBrandId, (SelectList)ViewData["CarBrandId"], "Choisir une marque", new { id = "CarBrandId", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CarBrandId, "", new { @class = "text-danger" })  
                            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create", "CarBrands")'">
                               Créer marque
                            </button>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CarModelId, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CarModelId, (SelectList)ViewData["CarModelId"], "Choisir un modèle", new { id = "CarModelId", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CarModelId, "", new { @class = "text-danger" })
                            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create", "CarModels")'">
                                 Créer modèle
                            </button>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CarMotorId, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CarMotorId, (SelectList)ViewData["CarMotorId"], "Choisir un moteur", new { id = "CarMotorId", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CarMotorId)
                            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create", "CarMotors")'">
                                Créer moteur
                            </button>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CarTrimId, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CarTrimId, (SelectList)ViewData["CarTrimId"], "Choisir une finition", new { id = "CarTrimId", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CarTrimId, "", new { @class = "text-danger" })    
                            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create", "CarTrims")'">
                                Créer finition
                            </button>
                    </div>
                    <div class="form-group">
                        <label asp-for="Year" class="control-label"></label>
                        <input asp-for="Year" class="form-control" />
                        <span asp-validation-for="Year" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Mileage" class="control-label"></label>
                        <input asp-for="Mileage" class="form-control" />
                        <span asp-validation-for="Mileage" class="text-danger"></span>
                    </div>
                </div>  

                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="PurchasePrice" class="control-label"></label>
                        <input asp-for="PurchasePrice" class="form-control" />€
                        <span asp-validation-for="PurchasePrice" class="text-danger"></span>
                    </div>
                    <div id="repairs">
                        Réparations :
                        @for (int i = 0; i < Model.CarRepairs.Count; i++)
                        {
                            <div class="car-repair-card mb-3">
                                <div class="car-repair-header">
                                    Réparation @(i + 1)
                                    <button type="button" class="close deleteRepair" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="car-repair-card-body">
                                    <div class="form-group">
                                        <label asp-for="CarRepairs[i].RepairDescription" class="control-label">
                                            Réparation :
                                        </label>
                                        <input asp-for="CarRepairs[i].RepairDescription" class="form-control" placeholder="Entrez la description" />
                                        <span asp-validation-for="CarRepairs[i].RepairDescription" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="CarRepairs[i].RepairCost" class="control-label">
                                            Coût :
                                        </label>
                                    <input asp-for="CarRepairs[i].RepairCost" class="form-control" placeholder="Entrez le coût" />€
                                        <span asp-validation-for="CarRepairs[i].RepairCost" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <button type="button" id="addRepair" class="btn btn-primary">Ajouter</button>
                    <div class="form-group">
                        <label asp-for="SellingPrice" class="control-label"></label>
                        <input type="text" value="@(Model.PurchasePrice + Model.CarRepairs.Sum(r => r.RepairCost))" class="form-control" readonly />€
                        <a href="#" class="btn btn-link calc-selling-price">Cliquez ici pour entrer un prix manuellement</a>
                        <span asp-validation-for="SellingPrice" class="text-danger"></span>
                    </div>
                    <div class="d-none selling-price-editor">
                        <div class="form-group">
                            <label asp-for="SellingPrice" class="control-label"></label>
                            <input asp-for="SellingPrice" class="form-control" />
                            <span asp-validation-for="SellingPrice" class="text-danger"></span>
                        </div>
                        <a href="#" class="btn btn-link cancel-selling-price-editor">Annuler</a>
                    </div>
                    <div class="form-group form-check">
                        <label asp-for="IsAvailable" class="form-check-label"></label>
                        <input class="form-check-input" type="checkbox" asp-for="IsAvailable" />
                        <div class="car-info-available" >**Indisponible par défaut (cocher pour rendre disponible)</div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="PurchaseDate" class="control-label"></label>
                        <input type="date"asp-for="PurchaseDate" class="form-control" />
                        <span asp-validation-for="PurchaseDate" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="DateOfAvailability" class="control-label"></label>
                        <input type="date" asp-for="DateOfAvailability" class="form-control" />
                        <span asp-validation-for="DateOfAvailability" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="SaleDate" class="control-label"></label>
                        <input type="date" asp-for="SaleDate" class="form-control" />
                        <span asp-validation-for="SaleDate" class="text-danger"></span>
                    </div>                    
                    <div class="form-group">
                        <label for="Images">Importer des photos</label>
                        <input type="file" name="Images" multiple />
                    </div>
                </div>
            </div>

            <div class="col-md-12">
                <div class="row">
                        <label asp-for="Description" class="control-label car-register-description"></label>
                </div>
                <div class="row">
                        <textarea asp-for="Description" class="form-control car-register-description" rows="3"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="row">
                    <input type="submit" value="Enregistrer" class="btn btn-validate btn-primary"/>
                </div>
            </div>

        </div>
    </div>
</form>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
        <script>
        jQuery(document).ready(function () {
            var carBrandSelect = $("#CarBrandId");
            var carModelSelect = $("#CarModelId");
            var carTrimSelect = $("#CarTrimId");
            var carMotorSelect = $("#CarMotorId");

            carBrandSelect.change(function () {
                var carBrandId = $(this).val();
                $.ajax(
                    {
                        url: '@Url.Action("GetModelsByBrand", "Cars")',
                        type: "GET",
                        data: { brandId: carBrandId },
                        success: function (models) {
                            console.log(models);
                            carModelSelect.empty().append('<option value="0" disabled selected>Select a model</option>');
                            $.each(models, function (index, model) {
                                carModelSelect.append($('<option>',
                                    {
                                        value: model.id,
                                        text: model.carModelName
                                    }));
                            });

                        }
                    });
            });

            carModelSelect.change(function () {
                var carModelId = $(this).val();
                console.log("Modèle sélectionné val(): ", carModelId);
                $.ajax(
                    {
                        url: '@Url.Action("GetTrimsByModel", "Cars")',
                        type: "GET",
                        data: { modelId: carModelId },
                        success: function (trims) {
                            console.log(trims);
                            carTrimSelect.empty().append('<option value="0" disabled selected>Select a trim</option>');
                            $.each(trims, function (index, trim) {
                                carTrimSelect.append($('<option>',
                                    {
                                        value: trim.id,
                                        text: trim.carTrimName
                                    }));
                            });

                        }
                    }
                );
            });

            carModelSelect.change(function () {
                var carModelId = $(this).val();
                console.log("Modèle sélectionné val(): ", carModelId);
                $.ajax(
                    {
                        url: '@Url.Action("GetMotorsByModel", "Cars")',
                        type: "GET",
                        data: { modelId: carModelId },
                        success: function (motors) {
                            console.log(motors);
                            carMotorSelect.empty().append('<option value="0" disabled selected>Select a motor</option>');
                            $.each(motors, function (index, motor) {
                                carMotorSelect.append($('<option>',
                                    {
                                        value: motor.id,
                                        text: motor.carMotorName
                                    }));
                            });

                        }
                    });
            });

            // Applique la validation jQuery validate au formulaire existant
            $("#carForm").validate({
                rules: {
                    PurchasePrice: {
                        required: true,
                        customdecimal: true
                    },
                    'CarRepairs[].RepairCost': {
                        customdecimal: true
                    }
                },
                messages: {
                    PurchasePrice: {
                        required: "Le prix d'achat du véhicule est obligatoire.",
                        customdecimal: "Le prix doit être un nombre avec au maximum deux chiffres après le séparateur décimal."
                    },
                    'CarRepairs[].RepairCost': {
                        customdecimal: "Le coût de réparation doit être un nombre avec au maximum deux chiffres après le séparateur décimal."
                    }
                },
                errorClass: "text-danger",
                errorPlacement: function (error, element) {
                    error.insertAfter(element);
                }
            });

            // Méthode de validation personnalisée pour les nombres décimaux
            $.validator.addMethod("customdecimal", function (value, element) {
                // Permet les nombres avec une virgule ou un point comme séparateur décimal
                return this.optional(element) || /^\d+([.,]\d{0,2})?$/.test(value);
            }, "Le prix doit être un nombre avec au maximum deux chiffres après le séparateur décimal.");

            function replaceDecimalSeparators(value) {
                return value.replace(',', '.');
            }

            function calculateSellingPrice() {
                var purchasePrice = parseFloat(replaceDecimalSeparators($('#PurchasePrice').val())) || 0;
                var repairCosts = 0;
                $('input[name^="CarRepairs["]').each(function () {
                    if ($(this).attr('name').endsWith('].RepairCost')) {
                        repairCosts += parseFloat(replaceDecimalSeparators($(this).val())) || 0;
                    }
                });
                var sellingPrice = purchasePrice + repairCosts + 500;
                $('#SellingPrice').val(sellingPrice.toFixed(2));
                $('.calc-selling-price').prev('input').val(sellingPrice.toFixed(2));
            }


            $('#addRepair').click(function () {
                var repairsDiv = $('#repairs');
                var repairIndex = repairsDiv.find('.car-repair-card').length;
                var newRepairDiv = $('<div>').addClass('car-repair-card mb-3');
                newRepairDiv.html(`
                    <div class="car-repair-header">
                        Réparation ${repairIndex + 1}
                        <button type="button" class="close deleteRepair" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="car-repair-card-body">
                        <div class="form-group">
                            <label>Réparation :</label>
                            <input class="form-control" name="CarRepairs[${repairIndex}].RepairDescription" placeholder="Entrez la description" />
                            <span class="text-danger field-validation-valid" data-valmsg-for="CarRepairs[${repairIndex}].RepairDescription" data-valmsg-replace="true"></span>
                        </div>
                        <div class="form-group">
                            <label>Coût :</label>
                            <input class="form-control customdecimal-validation" name="CarRepairs[${repairIndex}].RepairCost" placeholder="Entrez le coût" />€
                            <span class="text-danger field-validation-valid" data-valmsg-for="CarRepairs[${repairIndex}].RepairCost" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                `);
                repairsDiv.append(newRepairDiv);
                $.validator.unobtrusive.parse(newRepairDiv);
            });

            $('#repairs').on('click', '.deleteRepair', function () {
                $(this).closest('.car-repair-card').remove();
                calculateSellingPrice();
            });

            $('#PurchasePrice').addClass("customdecimal-validation").on('change keyup', function () {
                $(this).val(replaceDecimalSeparators($(this).val()));
                calculateSellingPrice();
            });

            $('#repairs').on('change keyup', 'input', function () {
                $(this).val(replaceDecimalSeparators($(this).val()));
                calculateSellingPrice();
            });


            // Déclenche manuellement l'événement pour calculer le prix de vente au chargement de la page
            calculateSellingPrice();

            $('.calc-selling-price').click(function (e) {
                e.preventDefault();
                $(this).hide().closest('.form-group').next('.selling-price-editor').removeClass('d-none');
            });

            $('.cancel-selling-price-editor').click(function (e) {
                e.preventDefault();
                $(this).closest('.selling-price-editor').addClass('d-none').prev('.form-group').find('.calc-selling-price').show();
                calculateSellingPrice(); 
        });

    </script>
}
