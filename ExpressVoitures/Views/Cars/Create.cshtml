@using ExpressVoitures.Controllers
@using ExpressVoitures.Models.Entities
@using ExpressVoitures.Data

@model ExpressVoitures.Models.Entities.CarViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Car</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" enctype="multipart/form-data" asp-controller="Cars" asp-action="Create">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                @Html.LabelFor(model => model.CarBrandId, "Car Brand", new { @class = "control-label" })
                @Html.DropDownListFor(model => model.CarBrandId, (SelectList)ViewData["CarBrandId"], "Choose a Brand",
                         new { id = "CarBrandId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CarBrandId)
                <div class="col-md-4" style="display: flex; align-items: flex-end;">
                    <button type="button" class="btn btn-primary btn-sm"
                            onclick="location.href='@Url.Action("Create", "CarBrands")'"
                            style="height: 75%; width: 75%;">
                        Nouvelle Marque
                    </button>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CarModelId, "Car Model", new { @class = "control-label" })
                @Html.DropDownListFor(model => model.CarModelId, (SelectList)ViewData["CarModelId"], "Choose a Model",
                         new { id = "CarModelId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CarModelId)
                <div class="col-md-4" style="display: flex; align-items: flex-end;">
                    <button type="button" class="btn btn-primary btn-sm"
                            onclick="location.href='@Url.Action("Create", "CarModels")'"
                            style="height: 75%; width: 75%;">
                        Nouveau Modèle
                    </button>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CarMotorId, "Car Motor", new { @class = "control-label" })
                @Html.DropDownListFor(model => model.CarMotorId, (SelectList)ViewData["CarMotorId"], "Choose a Motor",
                         new { id = "CarMotorId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CarMotorId)
                <div class="col-md-4" style="display: flex; align-items: flex-end;">
                    <button type="button" class="btn btn-primary btn-sm"
                            onclick="location.href='@Url.Action("Create", "CarMotors")'"
                            style="height: 75%; width: 75%;">
                        Nouveau Moteur
                    </button>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CarTrimId, "Car Trim", new { @class = "control-label" })
                @Html.DropDownListFor(model => model.CarTrimId, (SelectList)ViewData["CarTrimId"], "Choose a Finition",
                         new { id = "CarTrimId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CarTrimId)
                <div class="col-md-4" style="display: flex; align-items: flex-end;">
                    <button type="button" class="btn btn-primary btn-sm"
                            onclick="location.href='@Url.Action("Create", "CarTrims")'"
                            style="height: 75%; width: 75%;">
                        Nouvelle Finition
                    </button>
                </div>
            </div>


            <div class="form-group">
                <label asp-for="Year" class="control-label"></label>
                <input asp-for="Year" class="form-control" />
                <span asp-validation-for="Year" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Mileage" class="control-label"></label>
                <input asp-for="Mileage" class="form-control" />
                <span asp-validation-for="Mileage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchasePrice" class="control-label"></label>
                <input asp-for="PurchasePrice" class="form-control" />
                <span asp-validation-for="PurchasePrice" class="text-danger"></span>
            </div>
            <div id="repairs">
                <button type="button" id="addRepair" class="btn btn-primary">Ajouter une réparation</button>
                <h5>Réparations</h5>
                @for (int i = 0; i < Model.CarRepairs.Count; i++)

                {
                    <div class="card mb-3">
                        <div class="card-header">
                            Réparation @(i + 1)
                            <button type="button" class="close deleteRepair" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                <label asp-for="CarRepairs[i].RepairDescription" class="control-label">
                                    Description de la
                                    réparation
                                </label>
                                <input asp-for="CarRepairs[i].RepairDescription" class="form-control"
                                       placeholder="Entrez la description" />
                                <span asp-validation-for="CarRepairs[i].RepairDescription" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="CarRepairs[i].RepairCost" class="control-label">
                                    Coût de
                                    réparation(€)
                                </label>
                                <input asp-for="CarRepairs[i].RepairCost" class="form-control"
                                       placeholder="Entrez le coût" />
                                <span asp-validation-for="CarRepairs[i].RepairCost" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="form-group">
                <label asp-for="SellingPrice" class="control-label"></label>
                <input type="text" value="@(Model.PurchasePrice + Model.CarRepairs.Sum(r => r.RepairCost))"
                       class="form-control" readonly />
                <a href="#" class="btn btn-link calc-selling-price">Modifier le prix</a>
                <span asp-validation-for="SellingPrice" class="text-danger"></span>
            </div>
            <div class="d-none selling-price-editor">
                <div class="form-group">
                    <label asp-for="SellingPrice" class="control-label"></label>
                    <input asp-for="SellingPrice" class="form-control" />
                    <span asp-validation-for="SellingPrice" class="text-danger"></span>
                </div>
                <a href="#" class="btn btn-link cancel-selling-price-editor">Annuler</a>
            </div>

            <div class="form-group form-check">
                <label asp-for="IsAvailable" class="form-check-label"></label>
                <input class="form-check-input" type="checkbox" asp-for="IsAvailable" />

            </div>
            <div class="form-group">
                <label asp-for="PurchaseDate" class="control-label"></label>
                <input asp-for="PurchaseDate" class="form-control" />
                <span asp-validation-for="PurchaseDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateOfAvailability" class="control-label"></label>
                <input asp-for="DateOfAvailability" class="form-control" />
                <span asp-validation-for="DateOfAvailability" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SaleDate" class="control-label"></label>
                <input asp-for="SaleDate" class="form-control" />
                <span asp-validation-for="SaleDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="Images">Upload Images</label>
                <input type="file" name="Images" multiple />
            </div>

            <div class="from-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        jQuery(document).ready(function () {
            var carBrandSelect = $("#CarBrandId");
            var carModelSelect = $("#CarModelId");
            var carTrimSelect = $("#CarTrimId");
            var carMotorSelect = $("#CarMotorId");

            carBrandSelect.change(function () {
                var carBrandId = $(this).val();
                $.ajax(
                    {
                        url: '@Url.Action("GetModelsByBrand", "Cars")',
                        type: "GET",
                        data: { brandId: carBrandId },
                        success: function (models) {
                            console.log(models);
                            carModelSelect.empty().append('<option value="0" disabled selected>Select a model</option>');
                            $.each(models, function (index, model) {
                                carModelSelect.append($('<option>',
                                    {
                                        value: model.id,
                                        text: model.carModelName
                                    }));
                            });

                        }
                    });
            });

            carModelSelect.change(function () {
                var carModelId = $(this).val();
                console.log("Modèle sélectionné val(): ", carModelId);
                $.ajax(
                    {
                        url: '@Url.Action("GetTrimsByModel", "Cars")',
                        type: "GET",
                        data: { modelId: carModelId },
                        success: function (trims) {
                            console.log(trims);
                            carTrimSelect.empty().append('<option value="0" disabled selected>Select a trim</option>');
                            $.each(trims, function (index, trim) {
                                carTrimSelect.append($('<option>',
                                    {
                                        value: trim.id,
                                        text: trim.carTrimName
                                    }));
                            });

                        }
                    }
                );
            });

            carModelSelect.change(function () {
                var carModelId = $(this).val();
                console.log("Modèle sélectionné val(): ", carModelId);
                $.ajax(
                {
                    url: '@Url.Action("GetMotorsByModel", "Cars")',
                    type: "GET",
                    data: { modelId: carModelId },
                    success: function (motors) {
                        console.log(motors);
                        carMotorSelect.empty().append('<option value="0" disabled selected>Select a motor</option>');
                        $.each(motors, function (index, motor) {
                            carMotorSelect.append($('<option>',
                                {
                                    value: motor.id,
                                    text: motor.carMotorName
                                }));
                        });

                    }
                });
            });

            $('#addRepair').click(function () {
                var repairsDiv = $('#repairs');
                var repairIndex = repairsDiv.find('.card').length;
                var newRepairDiv = $('<div>').addClass('card mb-3');
                newRepairDiv.html(`
                                            <div class="card-header">
                                                Réparation ${repairIndex + 1}
                                                <button type="button" class="close deleteRepair" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="card-body">
                                                <div class="form-group">
                                                    <label>Description de la réparation</label>
                                                    <input class="form-control" name="CarRepairs[${repairIndex}].RepairDescription" placeholder="Entrez la description" />
                                                </div>
                                                <div class="form-group">
                                                    <label>Coût de réparation(€)</label>
                                                    <input class="form-control" name="CarRepairs[${repairIndex}].RepairCost" placeholder="Entrez le coût" />
                                                </div>
                                            </div>
                                        `);
                repairsDiv.append(newRepairDiv);
                $('#deleteRepair').show();
            });

            $('#repairs').on('click', '.deleteRepair', function () {
                $(this).closest('.card').remove();
                updateRepairsIndex();
                if ($('#repairs').children('.card').length === 0) {
                    $('#deleteRepair').hide();
                }
            });

            function updateRepairsIndex() {
                $('#repairs .card').each(function (index) {
                    $(this).find('.card-header').text(`Réparation ${index + 1}`);
                    $(this).find('input').each(function () {
                        var name = $(this).attr('name');
                        if (name) {
                            name = name.replace(/\[\d+\]/, `[${index}]`);
                            $(this).attr('name', name);
                        }
                    });
                });
            }

            function calculateSellingPrice() {
                var purchasePrice = parseFloat($('#PurchasePrice').val()) || 0;
                var repairCosts = 0;
                $('input[name^="CarRepairs["]').each(function () {
                    if ($(this).attr('name').endsWith('].RepairCost')) {
                        repairCosts += parseFloat($(this).val()) || 0;
                    }
                });
                var sellingPrice = purchasePrice + repairCosts + 500;
                $('#SellingPrice').val(sellingPrice.toFixed(2));
                $('.calc-selling-price').prev('input').val(sellingPrice.toFixed(2)); // Met à jour l'affichage du prix de vente calculé
            }

            $('#PurchasePrice').on('change keyup', function () { calculateSellingPrice(); });

            // Déclenche manuellement l'événement pour calculer le prix de vente au chargement de la page
            calculateSellingPrice();

            $('#PurchasePrice, #repairs').on('change keyup', 'input', function () {
                calculateSellingPrice();
            });

            $('#addRepair').click(function () {
                calculateSellingPrice(); // Recalcule le prix de vente après l'ajout d'une réparation
            });

            $('#repairs').on('click', '.deleteRepair', function () {
                calculateSellingPrice(); // Recalcule le prix de vente après la suppression d'une réparation
            });

            $('.calc-selling-price').click(function (e) {
                e.preventDefault();
                $(this).hide().closest('.form-group').next('.selling-price-editor').removeClass('d-none');
                // Annule le calcul automatique et permet l'édition manuelle
            });

            $('.cancel-selling-price-editor').click(function (e) {
                e.preventDefault();
                $(this).closest('.selling-price-editor').addClass('d-none').prev('.form-group').find('.calc-selling-price').show();
                calculateSellingPrice(); // Optionnel : Recalcule et réaffiche le prix de vente calculé lorsque l'édition est annulée
            });
        });

    </script>
}